-- CREATE DATABASE
CREATE DATABASE 'YOUR_DB_NAME'

-- ROLES TABLE
CREATE TABLE ROLES (
    ROLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    ROLE_NAME VARCHAR(30) NOT NULL UNIQUE
);

INSERT INTO ROLES (ROLE_NAME)
VALUES ('Actor'), ('Actress'), ('Director'), ('Producer'),('Costume Designer'), ('Choreographar');


-- ARTISTS TABLE
CREATE TABLE ARTISTS (
    ARTIST_ID INT IDENTITY(1,1) PRIMARY KEY,
    First_Name VARCHAR(20),
    Last_Name VARCHAR(20),
    Email VARCHAR(50) CHECK (Email LIKE '%@%'),
    ROLE_ID INT REFERENCES ROLES(ROLE_ID)
);

INSERT INTO ARTISTS (First_Name, Last_Name, Email, ROLE_ID)
VALUES 
('Prabhas', 'Uppalapati', 'Prabhas.Uppalapati@gmail.com', 1),
('Sai', 'Pallavi', 'sai.pallavi@outlook.com', 2),
('Rajamouli', 'S.S', 'raju.mouli@hotmail.com', 3),
('Ganesh', 'Master', 'ganesh.master@example.com', 6);


-- ARTISTS_ADDRESS TABLE
CREATE TABLE ARTISTS_ADDRESS (
    ADDRESS_ID INT IDENTITY(1,1) PRIMARY KEY,
    ARTIST_ID INT REFERENCES ARTISTS(ARTIST_ID),
    CITY VARCHAR(20),
    STATE VARCHAR(20),
    COUNTRY VARCHAR(20),
    COUNTRY_CODE VARCHAR(5)
);


INSERT INTO ARTISTS_ADDRESS (ARTIST_ID, CITY, STATE, COUNTRY, COUNTRY_CODE)
VALUES
(1, 'Hyderabad', 'TG', 'IND', '+91'),
(2, 'Kochi', 'KL', 'IND', '+91'),
(3, 'Vijayawada', 'AP', 'IND', '+91'),
(4, 'Banglore', 'KA', 'IND', '+91');

/*
-- DEPARTMENTS TABLE
CREATE TABLE DEPARTMENTS (
    DEPARTMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR(30) NOT NULL UNIQUE
);

INSERT INTO DEPARTMENTS (DEPARTMENT_NAME)
VALUES ('Acting'), ('Production'), ('Direction');

*/
-- CATEGORY TABLE
CREATE TABLE CATEGORY (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    ROLE_ID INT REFERENCES ROLES (ROLE_ID),
    EXPERIENCE INT CHECK (EXPERIENCE >= 0),
    CATEGORY_ID AS (
        CASE
            WHEN EXPERIENCE >= 15 THEN 1
            WHEN EXPERIENCE BETWEEN 5 AND 10 THEN 2
            WHEN EXPERIENCE < 5 THEN 3
        END
    ) PERSISTED,
    CATEGORY_NAME AS (
        CASE
            WHEN EXPERIENCE > 15 THEN 'EXPERT'
            WHEN EXPERIENCE BETWEEN 5 AND 10 THEN 'SENIOR'
            WHEN EXPERIENCE < 5 THEN 'JUNIOR'
        END
    ) PERSISTED,
    CHARGE_PER_HOUR INT NOT NULL CHECK (CHARGE_PER_HOUR > 0),
    UNIQUE (ROLE_ID, CATEGORY_ID)
);


-- Acting Categories
INSERT INTO CATEGORY (ROLE_ID, EXPERIENCE, CHARGE_PER_HOUR)
VALUES (1, 2, 100), (1, 8, 300), (1, 16, 500);

-- Production Categories
INSERT INTO CATEGORY (ROLE_ID, EXPERIENCE, CHARGE_PER_HOUR)
VALUES (1, 2, 100), (1, 8, 300), (1, 16, 500),
(2, 2, 100), (2, 8, 300), (2, 16, 500);

-- PROGRAMS TABLE
CREATE TABLE PROGRAMS (
    PROGRAM_ID INT IDENTITY(1,1) PRIMARY KEY,
    ARTIST_ID INT REFERENCES ARTISTS(ARTIST_ID),
    ROLE_ID INT REFERENCES ROLES(ROLE_ID),
    CATEGORY_ID INT REFERENCES CATEGORY(ID),
    PROGRAM_NAME VARCHAR(50),
    GENRE VARCHAR(50)
);

INSERT INTO PROGRAMS (ARTIST_ID, ROLE_ID, CATEGORY_ID, PROGRAM_NAME, GENRE)
VALUES 
(1, 1, 1, 'Epic Drama', 'Drama'),
(2, 1, 2, 'Fantasy Series', 'Fantasy'),
(3, 3, 3, 'Historical Biopic', 'History');


-- PROJECT_SCHEDULES TABLE
CREATE TABLE PROJECT_SCHEDULES (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    ARTIST_ID INT REFERENCES ARTISTS(ARTIST_ID),
    PROGRAM_ID INT REFERENCES PROGRAMS(PROGRAM_ID),
    CATEGORY_ID INT REFERENCES CATEGORY(ID),
    SCHEDULE_DATE DATE,
    SCHEDULED_SLOT VARCHAR(2),
    NO_OF_HOURS_PER_DAY INT,
    IS_PRESENT BIT
);

--INSERT INTO PROJECT_SCHEDULES (ARTIST_ID, PROGRAM_ID,CATEGORY_ID, SCHEDULE_DATE, SCHEDULED_SLOT, NO_OF_HOURS_PER_DAY, IS_PRESENT)
--VALUES
--(1, 1, '2025-06-01', '10:00:00', '14:00:00', 1),
--(2, 2, '2025-06-02', '11:00:00', '15:00:00', 1),
--(3, 3, '2025-06-03', '09:00:00', '13:00:00', 1);

TO execute above with correct values